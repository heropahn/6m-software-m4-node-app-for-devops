version: 2.1 # Use version 2.1 of the configuration file

# Orbs
orbs:
  # Node orb
  node: circleci/node@5.0.1
  # Docker orb
  docker: circleci/docker@2.1.4
  # Heroku orb
  heroku: circleci/heroku@2.0.0
  # Snyk orb
  snyk: snyk/snyk@1.5.0

# Jobs
jobs:
  # Build job
  build:
    docker:
      - image: cimg/node:16.10 # Use a Node image to build the project
    steps:
      - checkout # Check out the code
      - node/install-packages:
          pkg-manager: npm # Install npm packages
      - run:
          name: Install Dependencies
          command: npm install # Install dependencies

  # Test job
  test:
    docker:
      - image: cimg/node:16.10 # Use a Node image to run tests
    steps:
      - checkout # Check out the code
      - node/install-packages:
          pkg-manager: npm # Install npm packages
      - run:
          name: Run Tests
          command: npm run test # Run tests

  # Build and Push job
  build-and-push:
    docker:
      - image: circleci/python:3.7 # Use a Python image to run Docker commands
    steps:
      - checkout # Check out the code
      - setup_remote_docker:
          version: 20.10.7
          docker_layer_caching: true
      - docker/build: # Build the Docker image
          image: "heropahn/circleci_m4" # Name of the Docker image
          tag: "latest" # Tag of the Docker image
          path: "." # Path to the Dockerfile
      - run:
          name: Docker Login
          command: echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin # Login to Docker Hub
      - run:
          name: Push Docker Image
          # command: docker push $DOCKER_USER/circleci_m4:latest # Push the Docker image to Docker Hub
          command: | #
            docker push $DOCKER_USER/circleci_m4:latest

  # Publish job - lesson 4.6
  publish:
    executor: docker/docker
    steps:
      - setup_remote_docker # Set up Docker
      - checkout # Check out the code
      #- docker/check
      - run:
          name: Docker Login
          command: echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin # Login to Docker Hub
      - docker/build:
          image: heropahn/circleci_m4
          tag: "latest"
      - docker/push:
          image: heropahn/circleci_m4
          tag: "latest"
  scan: # Use the Snyk orb to scan the Docker image for vulnerabilities
    docker:
      - image: cimg/base:stable # Use a base image to run the Snyk scan
    environment:
      IMAGE_NAME: heropahn/circleci_m4 # Set the image name
    steps:
        - checkout
        - setup_remote_docker      
        # - docker/check
        - run: 
            name: Docker Login and Build
            command: |
              echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
              docker build -t $IMAGE_NAME .
        - snyk/scan: 
            docker-image-name: $IMAGE_NAME
  
  codescan:
    docker:
      - image: cimg/base:stable
    environment:
      IMAGE_NAME: heropahn/circleci_m4
    steps:
      - checkout
      - setup_remote_docker
      # - docker/check
      - run: docker build -t $IMAGE_NAME .
      - snyk/install
      - run: |
          snyk code test


  deploy:
    docker:
      - image: cimg/node:16.10
    steps:
      - setup_remote_docker # Set up Docker
      - heroku/install # Install the Heroku CLI
      - checkout # Check out the code
      - run:
          name: Heroku Container Push
          #  Set the stack to container, push the Docker image to Heroku, and release the image
          # push web means the process type build the image then push to registry
          # -a means the app name
          # the following are heroku commands
          command: |
            heroku container:login
            heroku stack:set container -a george-su-devops 
            heroku container:push web -a george-su-devops
            heroku container:release web -a george-su-devops

# Workflows
# workflows:
  # version: 2
  # simple_workflow_coach: # Define the workflow
  #   jobs: # Define the jobs that will run in the workflow
  #     - build
  #     - test: # Run tests
  #         requires:
  #           - build
  #     - build-and-push: # Build and push the Docker image
  #         requires:
  #           - test
  #     # Publish and deploy jobs - Assignment 4.6
  #     - publish:
  #         requires:
  #           - test
  #     - deploy:
  #         requires:
  #           - publish

# Workflows
workflows:
  version: 2
  main_workflow: # Workflow for the main branch
    jobs:
      - build:
          filters:
            branches:
              only: main # Only run on the main branch
      - test:
          requires:
            - build # Run tests
          filters:
            branches:
              only: main # Only run on the main branch
      - scan: # Scan the Docker image for vulnerabilities
          requires:
            - build # Scan the Docker image for vulnerabilities
          filters:
            branches:
              only: main # Only run on the main branch
      - codescan:
          requires:
            - build
          filters:
            branches:
              only: main

  release_workflow: # Workflow for the release branch
    jobs:
      - build-and-push:
          filters:
            branches:
              only: release # Only run on the release branch
            tags:
              only: /^v.*/ # Only run on tags that start with "v"
      - publish:
          requires:
            - build-and-push # Publish the Docker image
          filters:
            branches:
              only: release # Only run on the release branch
      - deploy:
          requires:
            - publish # Deploy the Docker image to Heroku
          filters:
            branches:
              only: release # Only run on the release branch
