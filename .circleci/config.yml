version: 2.1

# Orbs
orbs:
  # Node orb
  node: circleci/node@5.0.1
  # Docker orb
  docker: circleci/docker@1.4.0

# Jobs
jobs:
  # Build job
  build:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Install Dependencies
          command: npm install
      # - run:
      #     name: Check Docker Daemon Status
      #     command: sudo systemctl status docker
      # - run:
      #     name: Restart Docker Service
      #     command: sudo systemctl restart docker
      # - run:
      #     name: Check Docker Socket Permissions
      #     command: ls -l /var/run/docker.sock
      # - run:
      #     name: Docker Build
      #     command: docker build -t $DOCKER_USER/circleci_m4:$CIRCLE_SHA1 .

  # Test job
  test:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Run Tests
          command: npm run test

  # Build and Push job
  build-and-push:
    executor: docker/default # Use Docker as the execution environment
    steps:
      - checkout # Checkout your source code
      - docker/build:
          image: cimg/base:stable # Docker image to build
          tags:
            - $DOCKER_USER/circleci_m4:$CIRCLE_SHA1 # Tag with specific version
            - $DOCKER_USER/circleci_m4:latest # Tag as latest
      - docker/push:
          image: $DOCKER_USER/circleci_m4 # Docker image to push
          tags:
            - $DOCKER_USER/circleci_m4:$CIRCLE_SHA1 # Specify the versioned tag
            - $DOCKER_USER/circleci_m4:latest # Tag as latest
          username: $DOCKER_USER
          password: $DOCKER_PASS

  # Check Docker job
  check-docker:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          name: Check Docker Status
          command: |
            docker version
            docker run hello-world

# Workflows
workflows:
  version: 2
  simple_workflow:
    jobs:
      - build
      - test:
          requires:
            - build
      - build-and-push:
          requires:
            - test
      - check-docker:
          requires:
            - build-and-push
